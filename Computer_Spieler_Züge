//Was getan werden muss bevor es implementiert wird:
//1. Den Code an C# anpassen (Richtige Funktionen anlegen, Array prüfen, Random Zahl generieren, Schleifen checken)
//2. Variablen anpassen und Werte in die Variablen einspeichern
//3. Feld überprüfung von Sami übernehmen und anpassen


//Spielzug des Computers und Spielers

int schuss_x = 0;
int schuss_y = 0;
int start_zug = 0;
int Gewinner = 0;


main()				//Betätigen des Startknopfes
{											//Random Start Computer oder Spieler
	start_zug = random(2);
	
	if( start_zug == 1 )
	{
		func spieler_zug();
	}
	else if( start_zug == 2)
	{
		func computer_zug();
	}
	
	while( Gewinner == 0 )
	{
		
	}
}



func computer_zug()
{
	int comp_zug = 1;
	
	while(comp_zug == 1)
	{
		schuss_x = random(Feldgröße);						//Nimmt eine Randomzahl anhand der Größe des Spielfeldes 
		schuss_y = random(Feldgröße);						//so wird bestimmt wo hingeschossen wird
		
		if( schuss [schuss_x, schuss_y] == feld.blau ) 		//Kein Treffer
		{
			comp_zug = 0;
		}
		else if ( schuss [schuss_x, schuss_y] == feld.grau ) 	//Treffer
		{
			Arraywert des getroffenen Schiffes ändern					//Überprüfen welches Schiff getroffen wurde
																
			if( schiff_2er[2] == 1, 0 || schiff_2er[2] = 0, 1)	//Schiff der Größe 2 getroffen und Funktionsaufruf
			{
				func 2er_schiff_getroffen();
			}
			else if( schiff_3er[3] == 1, 1, 0 || schiff_3er[3] == 1, 0, 1 || schiff_3er[3] == 0, 1, 1 || schiff_3er[3] == 1, 0, 0 || schiff_3er[3] == 0, 1, 0 || schiff_3er[3] == 0, 0, 1 )
			{
				func 3er_schiff_getroffen();				//Schiff der Größe 3 getroffen und Funktionsaufruf
			}
			else if ( schiff_1er[1] == 0 || schiff_2er[2] == 0, 0 || schiff_3er[3] == 0, 0, 0 )
			{
				func schiff_versenkt();							// Ein Schiff wurde versenkt
			}		
		}
	}
}



func schiff_versenkt()													//Schiff versenkt
{																		//Computer hat einen neuen Zug und schießt erneut random
			schuss_x = random(Feldgröße);									
			schuss_y = random(Feldgröße);
			comp_zug = 1;
}


func 2er_schiff_getroffen()								//Schiff Größe 2 getroffen
{
	if( schiff_2er[2] == 1, 0)							//Schiff wurde getroffen, deshalb ist der Computer nochmal dran
	{
		Überprüfung auf welche Felder geschossen werden kann. (Oben, Unten, Rechts, Links)
	
		Schuss auf eins der Felder welches Beschossen werden kann.
	
		if( schuss == feld.grau )							//Zweiter Schuss getroffen und geht in die Funktion Schiff versenkt
		{
				func schiff_versenkt();	
		}
		else if( schuss == feld.blau )					//Zweiter Schuss nicht getroffen und Computerzug wird beendet
		{
			comp_zug = 0;
		}
	}
	else if( schiff_2er[2] == 0, 1)						//Gleiches Verfahren wenn das Schiff auf einem anderen feld getroffen wurde
	{
		Überprüfung auf welche Felder geschossen werden kann. (Oben, Unten, Rechts, Links)
	
		Schuss auf eins der Felder welches Beschossen werden kann.
	
		if( schuss == feld.grau )
		{
				func schiff_versenkt();	
		}
		else if( schuss == feld.blau )
		{
			comp_zug = 0;
		}
	}
}


func 3er_schiff_getroffen()												//Schiff Größe 3 getroffen
{
	
}
